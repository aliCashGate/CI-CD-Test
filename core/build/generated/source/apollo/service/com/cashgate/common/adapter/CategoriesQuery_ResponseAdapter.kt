//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cashgate.common.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableBooleanAdapter
import com.apollographql.apollo3.api.NullableIntAdapter
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.cashgate.common.CategoriesQuery
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object CategoriesQuery_ResponseAdapter {
  public object Data : Adapter<CategoriesQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("categories")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        CategoriesQuery.Data {
      var _categories: List<CategoriesQuery.Category?>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _categories = Category.obj().nullable().list().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return CategoriesQuery.Data(
        categories = _categories!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: CategoriesQuery.Data,
    ): Unit {
      writer.name("categories")
      Category.obj().nullable().list().toJson(writer, customScalarAdapters, value.categories)
    }
  }

  public object Category : Adapter<CategoriesQuery.Category> {
    public val RESPONSE_NAMES: List<String> = listOf("image", "title", "parent_id", "has_child",
        "id", "show_on_screen")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        CategoriesQuery.Category {
      var _image: String? = null
      var _title: String? = null
      var _parent_id: Int? = null
      var _has_child: Boolean? = null
      var _id: String? = null
      var _show_on_screen: Int? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _image = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _title = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _parent_id = NullableIntAdapter.fromJson(reader, customScalarAdapters)
          3 -> _has_child = NullableBooleanAdapter.fromJson(reader, customScalarAdapters)
          4 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          5 -> _show_on_screen = NullableIntAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return CategoriesQuery.Category(
        image = _image,
        title = _title!!,
        parent_id = _parent_id,
        has_child = _has_child,
        id = _id!!,
        show_on_screen = _show_on_screen
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: CategoriesQuery.Category,
    ): Unit {
      writer.name("image")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.image)

      writer.name("title")
      StringAdapter.toJson(writer, customScalarAdapters, value.title)

      writer.name("parent_id")
      NullableIntAdapter.toJson(writer, customScalarAdapters, value.parent_id)

      writer.name("has_child")
      NullableBooleanAdapter.toJson(writer, customScalarAdapters, value.has_child)

      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("show_on_screen")
      NullableIntAdapter.toJson(writer, customScalarAdapters, value.show_on_screen)
    }
  }
}
