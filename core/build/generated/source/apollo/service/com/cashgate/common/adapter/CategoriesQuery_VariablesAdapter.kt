//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cashgate.common.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.BooleanAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableBooleanAdapter
import com.apollographql.apollo3.api.NullableIntAdapter
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.present
import com.cashgate.common.CategoriesQuery
import kotlin.IllegalStateException
import kotlin.Unit

public object CategoriesQuery_VariablesAdapter : Adapter<CategoriesQuery> {
  public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
      CategoriesQuery = throw IllegalStateException("Input type used in output position")

  public override fun toJson(
    writer: JsonWriter,
    customScalarAdapters: CustomScalarAdapters,
    `value`: CategoriesQuery,
  ): Unit {
    if (value.showOnScreen is Optional.Present) {
      writer.name("showOnScreen")
      NullableIntAdapter.present().toJson(writer, customScalarAdapters, value.showOnScreen)
    }
    if (value.afl is Optional.Present) {
      writer.name("afl")
      NullableIntAdapter.present().toJson(writer, customScalarAdapters, value.afl)
    }
    if (value.categoryId is Optional.Present) {
      writer.name("categoryId")
      NullableIntAdapter.present().toJson(writer, customScalarAdapters, value.categoryId)
    }
    if (value.includeChild is Optional.Present) {
      writer.name("includeChild")
      NullableBooleanAdapter.present().toJson(writer, customScalarAdapters, value.includeChild)
    }
    else if (customScalarAdapters.adapterContext.serializeVariablesWithDefaultBooleanValues) {
      writer.name("includeChild")
      BooleanAdapter.toJson(writer, customScalarAdapters, false)
    }
  }
}
