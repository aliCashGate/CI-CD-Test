//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.cashgate.common

import com.apollographql.apollo3.annotations.ApolloAdaptableWith
import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CompiledField
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.Optional
import com.apollographql.apollo3.api.Query
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.cashgate.common.adapter.CategoriesQuery_ResponseAdapter
import com.cashgate.common.adapter.CategoriesQuery_VariablesAdapter
import com.cashgate.common.selections.CategoriesQuerySelections
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public data class CategoriesQuery(
  public val showOnScreen: Optional<Int?> = Optional.Absent,
  public val afl: Optional<Int?> = Optional.Absent,
  public val categoryId: Optional<Int?> = Optional.Absent,
  public val includeChild: Optional<Boolean?> = Optional.Absent,
) : Query<CategoriesQuery.Data> {
  public override fun id(): String = OPERATION_ID

  public override fun document(): String = OPERATION_DOCUMENT

  public override fun name(): String = OPERATION_NAME

  public override fun serializeVariables(writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters): Unit {
    CategoriesQuery_VariablesAdapter.toJson(writer, customScalarAdapters, this)
  }

  public override fun adapter(): Adapter<Data> = CategoriesQuery_ResponseAdapter.Data.obj()

  public override fun rootField(): CompiledField = CompiledField.Builder(
    name = "data",
    type = com.cashgate.common.type.Query.type
  )
  .selections(selections = CategoriesQuerySelections.__root)
  .build()

  @ApolloAdaptableWith(CategoriesQuery_ResponseAdapter.Data::class)
  public data class Data(
    public val categories: List<Category?>,
  ) : Query.Data

  public data class Category(
    public val image: String?,
    public val title: String,
    public val parent_id: Int?,
    public val has_child: Boolean?,
    public val id: String,
    public val show_on_screen: Int?,
  )

  public companion object {
    public const val OPERATION_ID: String =
        "3a35ab4927a5fd05bfb889d134df126838080b045ee857235ac96956b4782612"

    /**
     * The minimized GraphQL document being sent to the server to save a few bytes.
     * The un-minimized version is:
     *
     * query Categories($showOnScreen: Int, $afl: Int, $categoryId: Int, $includeChild: Boolean =
     * false ) {
     *   categories(show_on_screen: $showOnScreen, afl: $afl, category_id: $categoryId) {
     *     image
     *     title
     *     parent_id @include(if: $includeChild)
     *     has_child @include(if: $includeChild)
     *     id
     *     show_on_screen @include(if: $includeChild)
     *   }
     * }
     */
    public val OPERATION_DOCUMENT: String
      get() =
          "query Categories(${'$'}showOnScreen: Int, ${'$'}afl: Int, ${'$'}categoryId: Int, ${'$'}includeChild: Boolean = false ) { categories(show_on_screen: ${'$'}showOnScreen, afl: ${'$'}afl, category_id: ${'$'}categoryId) { image title parent_id @include(if: ${'$'}includeChild) has_child @include(if: ${'$'}includeChild) id show_on_screen @include(if: ${'$'}includeChild) } }"

    public const val OPERATION_NAME: String = "Categories"
  }
}
