// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN", "IMPLICIT_NOTHING_TYPE_ARGUMENT_IN_RETURN_POSITION")

package com.cashgate.feature_auth.models

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.`internal`.Util
import java.lang.NullPointerException
import java.lang.reflect.Constructor
import kotlin.Boolean
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.emptySet
import kotlin.jvm.Volatile
import kotlin.text.buildString

public class UserJsonAdapter(
  moshi: Moshi,
) : JsonAdapter<User>() {
  private val options: JsonReader.Options = JsonReader.Options.of("firstName", "lastName",
      "phoneNum", "password", "verificationCode", "isForgetPassword", "token")

  private val stringAdapter: JsonAdapter<String> = moshi.adapter(String::class.java, emptySet(),
      "firstName")

  private val booleanAdapter: JsonAdapter<Boolean> = moshi.adapter(Boolean::class.java, emptySet(),
      "isForgetPassword")

  @Volatile
  private var constructorRef: Constructor<User>? = null

  public override fun toString(): String = buildString(26) {
      append("GeneratedJsonAdapter(").append("User").append(')') }

  public override fun fromJson(reader: JsonReader): User {
    var firstName: String? = null
    var lastName: String? = null
    var phoneNum: String? = null
    var password: String? = null
    var verificationCode: String? = null
    var isForgetPassword: Boolean? = false
    var token: String? = null
    var mask0 = -1
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> {
          firstName = stringAdapter.fromJson(reader) ?: throw Util.unexpectedNull("firstName",
              "firstName", reader)
          // $mask = $mask and (1 shl 0).inv()
          mask0 = mask0 and 0xfffffffe.toInt()
        }
        1 -> {
          lastName = stringAdapter.fromJson(reader) ?: throw Util.unexpectedNull("lastName",
              "lastName", reader)
          // $mask = $mask and (1 shl 1).inv()
          mask0 = mask0 and 0xfffffffd.toInt()
        }
        2 -> {
          phoneNum = stringAdapter.fromJson(reader) ?: throw Util.unexpectedNull("phoneNum",
              "phoneNum", reader)
          // $mask = $mask and (1 shl 2).inv()
          mask0 = mask0 and 0xfffffffb.toInt()
        }
        3 -> {
          password = stringAdapter.fromJson(reader) ?: throw Util.unexpectedNull("password",
              "password", reader)
          // $mask = $mask and (1 shl 3).inv()
          mask0 = mask0 and 0xfffffff7.toInt()
        }
        4 -> {
          verificationCode = stringAdapter.fromJson(reader) ?:
              throw Util.unexpectedNull("verificationCode", "verificationCode", reader)
          // $mask = $mask and (1 shl 4).inv()
          mask0 = mask0 and 0xffffffef.toInt()
        }
        5 -> {
          isForgetPassword = booleanAdapter.fromJson(reader) ?:
              throw Util.unexpectedNull("isForgetPassword", "isForgetPassword", reader)
          // $mask = $mask and (1 shl 5).inv()
          mask0 = mask0 and 0xffffffdf.toInt()
        }
        6 -> {
          token = stringAdapter.fromJson(reader) ?: throw Util.unexpectedNull("token", "token",
              reader)
          // $mask = $mask and (1 shl 6).inv()
          mask0 = mask0 and 0xffffffbf.toInt()
        }
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    if (mask0 == 0xffffff80.toInt()) {
      // All parameters with defaults are set, invoke the constructor directly
      return  User(
          firstName = firstName as String,
          lastName = lastName as String,
          phoneNum = phoneNum as String,
          password = password as String,
          verificationCode = verificationCode as String,
          isForgetPassword = isForgetPassword as Boolean,
          token = token as String
      )
    } else {
      // Reflectively invoke the synthetic defaults constructor
      @Suppress("UNCHECKED_CAST")
      val localConstructor: Constructor<User> = this.constructorRef ?:
          User::class.java.getDeclaredConstructor(String::class.java, String::class.java,
          String::class.java, String::class.java, String::class.java,
          Boolean::class.javaPrimitiveType, String::class.java, Int::class.javaPrimitiveType,
          Util.DEFAULT_CONSTRUCTOR_MARKER).also { this.constructorRef = it }
      return localConstructor.newInstance(
          firstName,
          lastName,
          phoneNum,
          password,
          verificationCode,
          isForgetPassword,
          token,
          mask0,
          /* DefaultConstructorMarker */ null
      )
    }
  }

  public override fun toJson(writer: JsonWriter, value_: User?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("firstName")
    stringAdapter.toJson(writer, value_.firstName)
    writer.name("lastName")
    stringAdapter.toJson(writer, value_.lastName)
    writer.name("phoneNum")
    stringAdapter.toJson(writer, value_.phoneNum)
    writer.name("password")
    stringAdapter.toJson(writer, value_.password)
    writer.name("verificationCode")
    stringAdapter.toJson(writer, value_.verificationCode)
    writer.name("isForgetPassword")
    booleanAdapter.toJson(writer, value_.isForgetPassword)
    writer.name("token")
    stringAdapter.toJson(writer, value_.token)
    writer.endObject()
  }
}
